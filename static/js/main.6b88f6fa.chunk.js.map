{"version":3,"sources":["store/reducers/movieReducer/index.js","store/reducers/movieReducer/actions.js","store/reducers/queryReducer/index.js","store/reducers/queryReducer/actions.js","hooks/useActions.js","components/MoviesList.js","components/MovieForm.js","components/SearchBar.js","App.jsx","store/index.js","index.jsx"],"names":["FETCH_MOVIES","FETCH_MOVIES_ERROR","ADD_MOVIE","REMOVE_MOVIE","SET_MOVIE_TITLE","SET_MOVIE_RELEASE_YEAR","SET_MOVIE_FORMAT","SET_MOVIE_STARS","SET_SELECTED_ID","initialState","movies","id","Title","Format","Stars","selectedId","errorMessage","fetchMoviesAction","type","payload","fetchMoviesErrorAction","message","addMovieAction","movie","removeMovieAction","title","setMovieTitleAction","setMovieReleaseYearAction","year","setMovieFormatAction","format","setMovieStarsAction","stars","setSeletedId","adjustMovies","moviesList","replace","split","forEach","item","movieObj","i","a","Math","random","push","fetchMovies","fileContent","dispatch","url","files","text","response","fetch","trim","SET_TITLE_QUERY","SET_STARS_QUERY","SET_FILE_PATH","titleQuery","starsQuery","filePath","setTitleQueryAction","query","setStarsQueryAction","setFilePathAction","path","useActions","useDispatch","ActionCreators","movieActionCreators","queryActionCreators","bindActionCreators","MoviesList","useSelector","state","movieReducer","queryReducer","numberOfPagesMapper","Array","ceil","length","useState","showModal","setShowModal","fileValidator","setFileValidator","page","setPage","pagesCount","setPagesCount","useEffect","myMovies","fetchFileContent","file","reader","FileReader","readAsDataURL","onload","result","size","name","endsWith","handleClose","className","onClick","listOfMovies","sortedMovies","sort","b","localeCompare","reverse","sortMovies","accept","onChange","event","target","slice","filter","includes","map","key","MovieForm","ReleaseYear","isMovieExist","setIsMovieExist","onSubmit","preventDefault","movieToAdd","some","classnames","placeholder","value","pattern","required","min","max","console","log","SearchBar","App","reducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"o7BAEaA,EAAe,eACfC,EAAqB,qBACrBC,EAAY,YACZC,EAAe,eACfC,EAAkB,kBAClBC,EAAyB,yBACzBC,EAAmB,mBACnBC,EAAkB,kBAClBC,EAAkB,kBAEzBC,EAAe,CACnBC,OAAQ,GACRC,GAAI,EACJC,MAAO,GACP,eAAgB,GAChBC,OAAQ,MACRC,MAAO,GACPC,WAAY,EACZC,aAAc,ICNHC,EAAoB,SAAAP,GAAM,MAAK,CAC1CQ,KAAMlB,EACNmB,QAAST,IAGEU,EAAyB,SAAAC,GAAO,MAAK,CAChDH,KAAMjB,EACNkB,QAASE,IAGEC,EAAiB,SAAAC,GAAK,MAAK,CACtCL,KAAMhB,EACNiB,QAASI,IAGEC,EAAoB,SAAAC,GAAK,MAAK,CACzCP,KAAMf,EACNgB,QAASM,IAGEC,EAAsB,SAAAD,GAAK,MAAK,CAC3CP,KAAMd,EACNe,QAASM,IAGEE,EAA4B,SAAAC,GAAI,MAAK,CAChDV,KAAMb,EACNc,QAASS,IAGEC,EAAuB,SAAAC,GAAM,MAAK,CAC7CZ,KAAMZ,EACNa,QAASW,IAGEC,EAAsB,SAAAC,GAAK,MAAK,CAC3Cd,KAAMX,EACNY,QAASa,IAGEC,EAAe,SAAAtB,GAAE,MAAK,CACjCO,KAAMV,EACNW,QAASR,IAGLuB,EAAe,SAACxB,GACpB,IAAMyB,EAAa,GAEG,kBAAXzB,GACYA,EAAO0B,QAAQ,kBAAmB,KAAKC,MAAM,MAErDC,SAAQ,SAACf,GACpB,IAAMgB,EAAOhB,EAAMc,MAAM,KACnBG,EAAW,GAEjBD,EAAKD,SAAQ,SAACG,GACZ,IAAMC,EAAID,EAAEJ,MAAM,MAElBG,EAAS,GAAD,OAAIE,EAAE,KAAQA,EAAE,MAG1BF,EAAS7B,GAAqB,KAAhBgC,KAAKC,SAEnBT,EAAWU,KAAKL,MAIpB,OAAOL,GAGIW,EAAc,SAAAC,GAAW,8CAAI,WAAMC,GAAN,mBAAAN,EAAA,yDAElCO,EAAM,sIAIRF,EANoC,gCAOrBA,EAAYG,MAAM,GAAGC,OAPA,OAOtCC,EAPsC,8CASdC,MAAMJ,GATQ,+BASFE,OATE,QAStCC,EATsC,eAYlC1C,EAASwB,EAAakB,EAASE,QAErC,IACEN,EAAS/B,EAAkBP,IAC3B,SACAsC,EAAS5B,EAAuB,2BAjBM,4CAAJ,uDCpFzBmC,EAAkB,kBAClBC,EAAkB,kBAClBC,EAAgB,gBAEvBhD,EAAe,CACnBiD,WAAY,GACZC,WAAY,GACZC,SAAU,ICDCC,EAAsB,SAAAC,GAAK,MAAK,CAC3C5C,KAAMqC,EACNpC,QAAS2C,IAGEC,EAAsB,SAAAD,GAAK,MAAK,CAC3C5C,KAAMsC,EACNrC,QAAS2C,IAGEE,EAAoB,SAAAC,GAAI,MAAK,CACxC/C,KAAMuC,EACNtC,QAAS8C,ICbEC,EAAa,WACxB,IAAMlB,EAAWmB,cACXC,EAAc,2BACfC,GACAC,GAGL,OAAOC,YAAmBH,EAAgBpB,ICH/BwB,EAAa,WAgBxB,IAhB+B,IAAD,EACCC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,gBAAlDjE,EADsB,EACtBA,OAAQK,EADc,EACdA,WADc,EAK1B0D,aAAY,SAAAC,GAAK,OAAIA,EAAME,gBAF7BlB,EAH4B,EAG5BA,WACAC,EAJ4B,EAI5BA,WAJ4B,EAY1BO,IALF1C,EAP4B,EAO5BA,kBACAS,EAR4B,EAQ5BA,aACAhB,EAT4B,EAS5BA,kBACA6B,EAV4B,EAU5BA,YACAkB,EAX4B,EAW5BA,kBAGIa,EAAsB,IAAIC,MAAMnC,KAAKoC,KAAKrE,EAAOsE,OAAS,KAEvDvC,EAAI,EAAGA,EAAIoC,EAAoBG,OAAQvC,GAAK,EACnDoC,EAAoBpC,GAAKA,EAjBG,MAoBIwC,oBAAS,GApBb,mBAoBvBC,EApBuB,KAoBZC,EApBY,OAqBYF,oBAAS,GArBrB,mBAqBvBG,EArBuB,KAqBRC,EArBQ,OAsBNJ,mBAAS,GAtBH,mBAsBvBK,EAtBuB,KAsBjBC,EAtBiB,OAuBMN,mBAASJ,GAvBf,mBAuBvBW,EAvBuB,KAuBXC,EAvBW,KAyB9BC,qBAAU,WACRD,EAAcZ,KACb,CAACnE,EAAQgD,EAAYC,IAExB,IAAgBgC,EAoBVC,EAAgB,uCAAG,WAAMxC,GAAN,iBAAAV,EAAA,sEACJU,EADI,OACjByC,EADiB,QAGjBC,EAAS,IAAIC,YAEZC,cAAcH,EAAK3C,MAAM,IAChC4C,EAAOG,OAAS,WACdjC,EAAkB8B,EAAOI,SAGA,IAAvBL,EAAK3C,MAAM,GAAGiD,MACbN,EAAK3C,MAAM,GAAGkD,KAAKC,SAAS,QAG/BvD,EAAY+C,GAFZR,GAAiB,GAZI,2CAAH,sDAuBhBiB,EAAc,WAClBrE,EAAa,GACbkD,GAAa,IAQf,OACE,qBAAIoB,UAAU,aAAd,UACE,sBAAKA,UAAU,qBAAf,UACE,wBACErF,KAAK,SACLqF,UAAU,SACVC,QAAS,kBAAM1D,GAAY,IAH7B,qCAOA,wBACE5B,KAAK,SACLqF,UAAU,sBACVC,QAAS,kBAAMvF,EA1DJ,SAACwF,GAGlB,IAFA,IAAMC,EAAe,YAAID,GAAcE,MAAK,SAACjE,EAAGkE,GAAJ,OAAUlE,EAAE9B,MAAMiG,cAAcD,EAAEhG,UAErE6B,EAAI,EAAGA,EAAIgE,EAAazB,OAAQvC,GAAK,EAC5C,GAAIgE,EAAahE,GAAG7B,QAAU8F,EAAajE,GAAG7B,MAC5C,OAAO8F,EAIX,OAAO,YAAID,GAAcK,UAiDcC,CAAWrG,KAH9C,kBAOA,uBACEQ,KAAK,OACL8F,OAAO,OACPC,SAAU,SAAAC,GAAK,OACbtB,EAAiBsB,EAAMC,WAE1B/B,GACC,sBAAKmB,UAAU,eAAf,yBAEE,qBAAKA,UAAU,wBAAf,SACE,wBACErF,KAAK,SACLqF,UAAU,8BACVC,QAAS,kBAAMnB,GAAiB,IAHlC,4BAhFIM,EA2FJjF,EA1FWiF,EAASyB,MAAmB,IAAZ9B,EAAO,GAAgB,GAAPA,GAGlD+B,QAAO,SAAA9F,GAAK,OAAIA,EAAMX,MAAM0G,SAAS5D,MACrC2D,QAAO,SAAA9F,GAAK,OAAIA,EAAMT,MAAMwG,SAAS3D,OAsFtB4D,KAAI,SAAAhG,GAAK,OACvB,qBAAsBgF,UAAU,mBAAhC,UACE,6CAAchF,EAAMX,SACnBG,IAAeQ,EAAMZ,KAAOuE,GAC3B,qCACE,oDAAqB3D,EAAM,mBAC3B,8CAAeA,EAAMV,UACrB,6CAAcU,EAAMT,YAGxB,sBAAKyF,UAAU,2BAAf,UACGxF,IAAeQ,EAAMZ,GACpB,sCACIuE,GACA,wBACEhE,KAAK,SACLqF,UAAU,SACVC,QAAS,kBAAMvE,EAAa,IAH9B,uBASDiD,GACC,sBAAKqB,UAAU,eAAf,wDAEE,sBAAKA,UAAU,wBAAf,UACE,wBACErF,KAAK,SACLqF,UAAU,+BACVC,QAAS,kBAzEV/E,EAyE4BF,EAAMX,MAxErDY,EAAkBC,QAClB0D,GAAa,GAFK,IAAC1D,GAsED,oBAQA,wBACEP,KAAK,SACLqF,UAAU,8BACVC,QAASF,EAHX,4BAYR,wBACEpF,KAAK,SACLqF,UAAU,SACVC,QAAS,kBAAMvE,EAAaV,EAAMZ,KAHpC,uBASDuE,GAAanE,IAAeQ,EAAMZ,IACjC,wBACEO,KAAK,SACLqF,UAAU,SACVC,QAAS,kBAAMvE,EAAaV,EAAMZ,KAHpC,uBASF,wBACEO,KAAK,SACLqF,UAAU,wBACVC,QAAS,kBA1HC7F,EA0HkBY,EAAMZ,GAzH5CsB,EAAatB,QACbwE,GAAa,GAFM,IAACxE,GAuHZ,+BAjEKY,EAAMX,UA2EjB,8BACG4E,EAAW+B,KAAI,SAACC,EAAK/E,GAAN,OACd,wBACEvB,KAAK,SACLqF,UAAU,qBACVC,QAAS,kBAAMjB,EAAQ9C,EAAI,IAH7B,SAMGA,EAAI,GAFA+E,EAAM,Y,iBC5MVC,EAAY,WAAO,IAAD,EAOzBvD,IALFxC,EAF2B,EAE3BA,oBACAC,EAH2B,EAG3BA,0BACAE,EAJ2B,EAI3BA,qBACAE,EAL2B,EAK3BA,oBACAT,EAN2B,EAM3BA,eAN2B,EAezBmD,aAAY,SAAAC,GAAK,OAAIA,EAAMC,gBAL7B/D,EAV2B,EAU3BA,MACgB8G,EAXW,EAW3B,gBACA7G,EAZ2B,EAY3BA,OACAC,EAb2B,EAa3BA,MACAJ,EAd2B,EAc3BA,OAd2B,EAiBWuE,oBAAS,GAjBpB,mBAiBtB0C,EAjBsB,KAiBRC,EAjBQ,KAsC7B,OACE,uBAAMrB,UAAU,OAAOsB,SApBJ,SAACX,GACpBA,EAAMY,iBAEN,IAAMC,EAAa,CACjBpH,GAAoB,KAAhBgC,KAAKC,SACThC,QACA,eAAgB8G,EAChB7G,SACAC,SAGEJ,EAAOsH,MAAK,SAAAzG,GAAK,OAAIA,EAAMX,QAAUmH,EAAWnH,SAClDgH,GAAgB,IAEhBA,GAAgB,GAChBtG,EAAeyG,KAKjB,UACE,uBACE7G,KAAK,OACLqF,UAAW0B,IAAW,QAAS,CAAE,gBAAiBN,IAClDO,YAAY,QACZC,MAAOvH,EACPqG,SAAU,SAAAC,GAAK,OAAIxF,EAAoBwF,EAAMC,OAAOgB,QACpDC,QAAQ,cACRC,UAAQ,IAEV,uBACEnH,KAAK,SACLqF,UAAU,QACV2B,YAAY,cACZC,MAAOT,EACPT,SAAU,SAAAC,GAAK,OAAIvF,EAA0BuF,EAAMC,OAAOgB,QAC1DG,IAAI,OACJC,IAAI,OACJF,UAAQ,IAGV,yBACE9B,UAAU,eACV4B,MAAOtH,EACPoG,SAAU,SAACC,GACTrF,EAAqBqF,EAAMC,OAAOgB,OAClCK,QAAQC,IAAIvB,EAAMC,OAAOgB,QAL7B,UAQE,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,UAAd,wBAGF,uBACEjH,KAAK,OACLqF,UAAU,QACV2B,YAAY,QACZC,MAAOrH,EACPmG,SAAU,SAAAC,GAAK,OAAInF,EAAoBmF,EAAMC,OAAOgB,QACpDC,QAAQ,iBACRC,UAAQ,IAEV,wBACEnH,KAAK,SACLqF,UAAU,eAFZ,uBAOCoB,GACC,qBAAKpB,UAAU,gBAAf,qDC3FKmC,EAAY,WAAO,IAAD,EACMjE,aAAY,SAAAC,GAAK,OAAIA,EAAME,gBAAtDlB,EADqB,EACrBA,WAAYC,EADS,EACTA,WADS,EAEwBO,IAA7CL,EAFqB,EAErBA,oBAAqBE,EAFA,EAEAA,oBAE7B,OACE,sBAAKwC,UAAU,YAAf,UACE,uBACErF,KAAK,OACLqF,UAAU,QACV2B,YAAY,kBACZC,MAAOzE,EACPuD,SAAU,SAAAC,GAAK,OAAIrD,EAAoBqD,EAAMC,OAAOgB,UAEtD,uBACEjH,KAAK,OACLqF,UAAU,QACV2B,YAAY,iBACZC,MAAOxE,EACPsD,SAAU,SAAAC,GAAK,OAAInD,EAAoBmD,EAAMC,OAAOgB,cCjB/CQ,EAAM,kBACjB,mCACE,sBAAKpC,UAAU,YAAf,UACE,sBAAKA,UAAU,UAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEF,cAAC,EAAD,U,QCTAqC,EAAUC,YAAgB,CAC9BlE,aTiB0B,WAAmC,IAAlCD,EAAiC,uDAAzBjE,EAAcqI,EAAW,uCAC5D,OAAQA,EAAO5H,MACb,KAAKlB,EACH,OAAO,2BACF0E,GADL,IAEEhE,OAAQoI,EAAO3H,UAGnB,KAAKlB,EACH,OAAO,2BACFyE,GADL,IAEE1D,aAAc8H,EAAO3H,UAGzB,KAAKjB,EACH,OAAO,2BACFO,GADL,IAEEC,OAAO,GAAD,mBAAMgE,EAAMhE,QAAZ,CAAoBoI,EAAO3H,YAGrC,KAAKhB,EACH,OAAO,2BACFuE,GADL,IAEEhE,OAAQgE,EAAMhE,OAAO2G,QAAO,SAAA9F,GAAK,OAAIA,EAAMX,QAAUkI,EAAO3H,aAGhE,KAAKf,EACH,OAAO,2BACFsE,GADL,IAEE9D,MAAOkI,EAAO3H,UAGlB,KAAKd,EACH,OAAO,2BACFqE,GADL,IAEE,eAAgBoE,EAAO3H,UAG3B,KAAKb,EACH,OAAO,2BACFoE,GADL,IAEE7D,OAAQiI,EAAO3H,UAGnB,KAAKZ,EACH,OAAO,2BACFmE,GADL,IAEE5D,MAAOgI,EAAO3H,UAGlB,KAAKX,EACH,OAAO,2BACFkE,GADL,IAEE3D,WAAY+H,EAAO3H,UAGvB,QACE,OAAOuD,ISzEXE,aPG0B,WAAmC,IAAlCF,EAAiC,uDAAzBjE,EAAcqI,EAAW,uCAC5D,OAAQA,EAAO5H,MACb,KAAKqC,EACH,OAAO,2BACFmB,GADL,IAEEhB,WAAYoF,EAAO3H,UAGvB,KAAKqC,EACH,OAAO,2BACFkB,GADL,IAEEf,WAAYmF,EAAO3H,UAGvB,KAAKsC,EACH,OAAO,2BACFiB,GADL,IAEEd,SAAUkF,EAAO3H,UAGrB,QACE,OAAOuD,MOrBAqE,GAAQC,YAAYJ,EAASK,YAAgBC,MCJ1DC,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACE,cAAC,EAAD,MAEFM,SAASC,eAAe,W","file":"static/js/main.6b88f6fa.chunk.js","sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable implicit-arrow-linebreak */\nexport const FETCH_MOVIES = 'FETCH_MOVIES';\nexport const FETCH_MOVIES_ERROR = 'FETCH_MOVIES_ERROR';\nexport const ADD_MOVIE = 'ADD_MOVIE';\nexport const REMOVE_MOVIE = 'REMOVE_MOVIE';\nexport const SET_MOVIE_TITLE = 'SET_MOVIE_TITLE';\nexport const SET_MOVIE_RELEASE_YEAR = 'SET_MOVIE_RELEASE_YEAR';\nexport const SET_MOVIE_FORMAT = 'SET_MOVIE_FORMAT';\nexport const SET_MOVIE_STARS = 'SET_MOVIE_STARS';\nexport const SET_SELECTED_ID = 'SET_SELECTED_ID';\n\nconst initialState = {\n  movies: [],\n  id: 0,\n  Title: '',\n  'Release Year': '',\n  Format: 'VHS',\n  Stars: '',\n  selectedId: 0,\n  errorMessage: '',\n};\n\nexport const movieReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_MOVIES:\n      return {\n        ...state,\n        movies: action.payload,\n      };\n\n    case FETCH_MOVIES_ERROR:\n      return {\n        ...state,\n        errorMessage: action.payload,\n      };\n\n    case ADD_MOVIE:\n      return {\n        ...initialState,\n        movies: [...state.movies, action.payload],\n      };\n\n    case REMOVE_MOVIE:\n      return {\n        ...state,\n        movies: state.movies.filter(movie => movie.Title !== action.payload),\n      };\n\n    case SET_MOVIE_TITLE:\n      return {\n        ...state,\n        Title: action.payload,\n      };\n\n    case SET_MOVIE_RELEASE_YEAR:\n      return {\n        ...state,\n        'Release Year': action.payload,\n      };\n\n    case SET_MOVIE_FORMAT:\n      return {\n        ...state,\n        Format: action.payload,\n      };\n\n    case SET_MOVIE_STARS:\n      return {\n        ...state,\n        Stars: action.payload,\n      };\n\n    case SET_SELECTED_ID:\n      return {\n        ...state,\n        selectedId: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n","/* eslint-disable no-console */\n/* eslint-disable prefer-destructuring */\nimport {\n  FETCH_MOVIES,\n  FETCH_MOVIES_ERROR,\n  ADD_MOVIE,\n  REMOVE_MOVIE,\n  SET_MOVIE_TITLE,\n  SET_MOVIE_RELEASE_YEAR,\n  SET_MOVIE_FORMAT,\n  SET_MOVIE_STARS,\n  SET_SELECTED_ID,\n} from '.';\n\nexport const fetchMoviesAction = movies => ({\n  type: FETCH_MOVIES,\n  payload: movies,\n});\n\nexport const fetchMoviesErrorAction = message => ({\n  type: FETCH_MOVIES_ERROR,\n  payload: message,\n});\n\nexport const addMovieAction = movie => ({\n  type: ADD_MOVIE,\n  payload: movie,\n});\n\nexport const removeMovieAction = title => ({\n  type: REMOVE_MOVIE,\n  payload: title,\n});\n\nexport const setMovieTitleAction = title => ({\n  type: SET_MOVIE_TITLE,\n  payload: title,\n});\n\nexport const setMovieReleaseYearAction = year => ({\n  type: SET_MOVIE_RELEASE_YEAR,\n  payload: year,\n});\n\nexport const setMovieFormatAction = format => ({\n  type: SET_MOVIE_FORMAT,\n  payload: format,\n});\n\nexport const setMovieStarsAction = stars => ({\n  type: SET_MOVIE_STARS,\n  payload: stars,\n});\n\nexport const setSeletedId = id => ({\n  type: SET_SELECTED_ID,\n  payload: id,\n});\n\nconst adjustMovies = (movies) => {\n  const moviesList = [];\n\n  if (typeof movies === 'string') {\n    const prettyMovies = movies.replace(/(?:\\r\\n|\\r|\\n)/g, '|').split('||');\n\n    prettyMovies.forEach((movie) => {\n      const item = movie.split('|');\n      const movieObj = {};\n\n      item.forEach((i) => {\n        const a = i.split(': ');\n\n        movieObj[`${a[0]}`] = a[1];\n      });\n\n      movieObj.id = Math.random() * 10e9;\n\n      moviesList.push(movieObj);\n    });\n  }\n\n  return moviesList;\n};\n\nexport const fetchMovies = fileContent => async(dispatch) => {\n  // eslint-disable-next-line max-len\n  const url = 'https://gist.githubusercontent.com/k0stik/3028d42973544dd61c3b4ad863378cad/raw/cca50e86dd745c158491adf35bb212d322d58260/movies.txt';\n\n  let response;\n\n  if (fileContent) {\n    response = await fileContent.files[0].text();\n  } else {\n    response = await (await fetch(url)).text();\n  }\n\n  const movies = adjustMovies(response.trim());\n\n  try {\n    dispatch(fetchMoviesAction(movies));\n  } catch {\n    dispatch(fetchMoviesErrorAction('Failed to fetch movies'));\n  }\n};\n","export const SET_TITLE_QUERY = 'SET_TITLE_QUERY';\nexport const SET_STARS_QUERY = 'SET_STARS_QUERY';\nexport const SET_FILE_PATH = 'SET_FILE_PATH';\n\nconst initialState = {\n  titleQuery: '',\n  starsQuery: '',\n  filePath: '',\n};\n\nexport const queryReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_TITLE_QUERY:\n      return {\n        ...state,\n        titleQuery: action.payload,\n      };\n\n    case SET_STARS_QUERY:\n      return {\n        ...state,\n        starsQuery: action.payload,\n      };\n\n    case SET_FILE_PATH:\n      return {\n        ...state,\n        filePath: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n","import {\n  SET_TITLE_QUERY,\n  SET_STARS_QUERY,\n  SET_FILE_PATH,\n} from '.';\n\nexport const setTitleQueryAction = query => ({\n  type: SET_TITLE_QUERY,\n  payload: query,\n});\n\nexport const setStarsQueryAction = query => ({\n  type: SET_STARS_QUERY,\n  payload: query,\n});\n\nexport const setFilePathAction = path => ({\n  type: SET_FILE_PATH,\n  payload: path,\n});\n","import { useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as movieActionCreators from '../store/reducers/movieReducer/actions';\nimport * as queryActionCreators from '../store/reducers/queryReducer/actions';\n\nexport const useActions = () => {\n  const dispatch = useDispatch();\n  const ActionCreators = {\n    ...movieActionCreators,\n    ...queryActionCreators,\n  };\n\n  return bindActionCreators(ActionCreators, dispatch);\n};\n","/* eslint-disable max-len */\n/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable no-console */\n/* eslint-disable arrow-body-style */\n/* eslint-disable react/prop-types */\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useActions } from '../hooks/useActions';\n\nexport const MoviesList = () => {\n  const { movies, selectedId } = useSelector(state => state.movieReducer);\n  const {\n    titleQuery,\n    starsQuery,\n  } = useSelector(state => state.queryReducer);\n  const {\n    removeMovieAction,\n    setSeletedId,\n    fetchMoviesAction,\n    fetchMovies,\n    setFilePathAction,\n  } = useActions();\n\n  const numberOfPagesMapper = new Array(Math.ceil(movies.length / 10));\n\n  for (let i = 0; i < numberOfPagesMapper.length; i += 1) {\n    numberOfPagesMapper[i] = i;\n  }\n\n  const [showModal, setShowModal] = useState(false);\n  const [fileValidator, setFileValidator] = useState(false);\n  const [page, setPage] = useState(1);\n  const [pagesCount, setPagesCount] = useState(numberOfPagesMapper);\n\n  useEffect(() => {\n    setPagesCount(numberOfPagesMapper);\n  }, [movies, titleQuery, starsQuery]);\n\n  const filter = (myMovies) => {\n    const listOfMovies = myMovies.slice((page - 1) * 10, page * 10);\n\n    return listOfMovies\n      .filter(movie => movie.Title.includes(titleQuery))\n      .filter(movie => movie.Stars.includes(starsQuery));\n  };\n\n  const sortMovies = (listOfMovies) => {\n    const sortedMovies = [...listOfMovies].sort((a, b) => a.Title.localeCompare(b.Title));\n\n    for (let i = 0; i < listOfMovies.length; i += 1) {\n      if (listOfMovies[i].Title !== sortedMovies[i].Title) {\n        return sortedMovies;\n      }\n    }\n\n    return [...listOfMovies].reverse();\n  };\n\n  const fetchFileContent = async(response) => {\n    const file = await response;\n\n    const reader = new FileReader();\n\n    reader.readAsDataURL(file.files[0]);\n    reader.onload = () => {\n      setFilePathAction(reader.result);\n    };\n\n    if (file.files[0].size === 0\n     || !file.files[0].name.endsWith('.txt')) {\n      setFileValidator(true);\n    } else {\n      fetchMovies(file);\n    }\n  };\n\n  const handleRemove = (id) => {\n    setSeletedId(id);\n    setShowModal(true);\n  };\n\n  const handleClose = () => {\n    setSeletedId(0);\n    setShowModal(false);\n  };\n\n  const deleteMovie = (title) => {\n    removeMovieAction(title);\n    setShowModal(false);\n  };\n\n  return (\n    <ul className=\"moviesList\">\n      <div className=\"moviesList__extras\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => fetchMovies(false)}\n        >\n          Load movies from server\n        </button>\n        <button\n          type=\"button\"\n          className=\"button button__sort\"\n          onClick={() => fetchMoviesAction(sortMovies(movies))}\n        >\n          Sort\n        </button>\n        <input\n          type=\"file\"\n          accept=\".txt\"\n          onChange={event =>\n            fetchFileContent(event.target)}\n        />\n        {fileValidator && (\n          <div className=\"modal_window\">\n            Invalid file\n            <div className=\"modal_window__buttons\">\n              <button\n                type=\"button\"\n                className=\"modal_window__buttons-close\"\n                onClick={() => setFileValidator(false)}\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n      {filter(movies).map(movie => (\n        <li key={movie.Title} className=\"moviesList__item\">\n          <p>{`Title: ${movie.Title}`}</p>\n          {selectedId === movie.id && !showModal && (\n            <>\n              <p>{`Release Year: ${movie['Release Year']}`}</p>\n              <p>{`Format: ${movie.Format}`}</p>\n              <p>{`Stars: ${movie.Stars}`}</p>\n            </>\n          )}\n          <div className=\"moviesList__item-buttons\">\n            {selectedId === movie.id ? (\n              <>\n                {!showModal && (\n                  <button\n                    type=\"button\"\n                    className=\"button\"\n                    onClick={() => setSeletedId(0)}\n                  >\n                    Hide info\n                  </button>\n                )}\n\n                {showModal && (\n                  <div className=\"modal_window\">\n                    Are you sure you want to delete this movie?\n                    <div className=\"modal_window__buttons\">\n                      <button\n                        type=\"button\"\n                        className=\"modal_window__buttons-delete\"\n                        onClick={() => deleteMovie(movie.Title)}\n                      >\n                        Delete\n                      </button>\n\n                      <button\n                        type=\"button\"\n                        className=\"modal_window__buttons-close\"\n                        onClick={handleClose}\n                      >\n                        Close\n                      </button>\n                    </div>\n                  </div>\n                )}\n              </>\n            ) : (\n              <button\n                type=\"button\"\n                className=\"button\"\n                onClick={() => setSeletedId(movie.id)}\n              >\n                Show info\n              </button>\n            )}\n\n            {showModal && selectedId === movie.id && (\n              <button\n                type=\"button\"\n                className=\"button\"\n                onClick={() => setSeletedId(movie.id)}\n              >\n                Show info\n              </button>\n            )}\n\n            <button\n              type=\"button\"\n              className=\"button button__remove\"\n              onClick={() => handleRemove(movie.id)}\n            >\n              Remove movie\n            </button>\n          </div>\n        </li>\n      ))}\n      <div>\n        {pagesCount.map((key, i) => (\n          <button\n            type=\"button\"\n            className=\"button page-button\"\n            onClick={() => setPage(i + 1)}\n            key={key + 1}\n          >\n            {i + 1}\n          </button>\n        ))}\n      </div>\n    </ul>\n  );\n};\n","/* eslint-disable no-console */\n/* eslint-disable no-unused-vars */\nimport React, { useState } from 'react';\nimport classnames from 'classnames';\nimport { useSelector } from 'react-redux';\nimport { useActions } from '../hooks/useActions';\n\nexport const MovieForm = () => {\n  const {\n    setMovieTitleAction,\n    setMovieReleaseYearAction,\n    setMovieFormatAction,\n    setMovieStarsAction,\n    addMovieAction,\n  } = useActions();\n\n  const {\n    Title,\n    'Release Year': ReleaseYear,\n    Format,\n    Stars,\n    movies,\n  } = useSelector(state => state.movieReducer);\n\n  const [isMovieExist, setIsMovieExist] = useState(false);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const movieToAdd = {\n      id: Math.random() * 10e9,\n      Title,\n      'Release Year': ReleaseYear,\n      Format,\n      Stars,\n    };\n\n    if (movies.some(movie => movie.Title === movieToAdd.Title)) {\n      setIsMovieExist(true);\n    } else {\n      setIsMovieExist(false);\n      addMovieAction(movieToAdd);\n    }\n  };\n\n  return (\n    <form className=\"form\" onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className={classnames('input', { 'input-warning': isMovieExist })}\n        placeholder=\"Title\"\n        value={Title}\n        onChange={event => setMovieTitleAction(event.target.value)}\n        pattern=\".*(?<!\\s)$\"\n        required\n      />\n      <input\n        type=\"number\"\n        className=\"input\"\n        placeholder=\"ReleaseYear\"\n        value={ReleaseYear}\n        onChange={event => setMovieReleaseYearAction(event.target.value)}\n        min=\"1850\"\n        max=\"2022\"\n        required\n      />\n\n      <select\n        className=\"form__button\"\n        value={Format}\n        onChange={(event) => {\n          setMovieFormatAction(event.target.value);\n          console.log(event.target.value);\n        }}\n      >\n        <option value=\"VHS\">VHS</option>\n        <option value=\"DVD\">DVD</option>\n        <option value=\"Blu-Ray\">Blu-Ray</option>\n      </select>\n\n      <input\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Stars\"\n        value={Stars}\n        onChange={event => setMovieStarsAction(event.target.value)}\n        pattern=\"[a-zA-Z,-]{1,}\"\n        required\n      />\n      <button\n        type=\"submit\"\n        className=\"form__button\"\n      >\n        Add movie\n      </button>\n\n      {isMovieExist && (\n        <div className=\"form__warning\">\n          Movie with this name already exists\n        </div>\n      )}\n    </form>\n  );\n};\n","/* eslint-disable no-console */\n/* eslint-disable no-unused-vars */\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useActions } from '../hooks/useActions';\n\nexport const SearchBar = () => {\n  const { titleQuery, starsQuery } = useSelector(state => state.queryReducer);\n  const { setTitleQueryAction, setStarsQueryAction } = useActions();\n\n  return (\n    <div className=\"searchBar\">\n      <input\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search by title\"\n        value={titleQuery}\n        onChange={event => setTitleQueryAction(event.target.value)}\n      />\n      <input\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search by cast\"\n        value={starsQuery}\n        onChange={event => setStarsQueryAction(event.target.value)}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.scss';\n\nimport { MoviesList } from './components/MoviesList';\nimport { MovieForm } from './components/MovieForm';\nimport { SearchBar } from './components/SearchBar';\n\nexport const App = () => (\n  <>\n    <div className=\"container\">\n      <div className=\"wrapper\">\n        <SearchBar />\n        <MoviesList />\n      </div>\n      <MovieForm />\n    </div>\n  </>\n);\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { movieReducer } from './reducers/movieReducer';\nimport { queryReducer } from './reducers/queryReducer';\n\nconst reducer = combineReducers({\n  movieReducer,\n  queryReducer,\n});\n\nexport const store = createStore(reducer, applyMiddleware(thunk));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { App } from './App';\nimport { store } from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}